plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.snowroad'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	manifest {
		attributes 'Main-Class' : 'com.snowroad.SnowroadStarterApplication'
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }  // JitPack 저장소 추가
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'	//Swagger
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'	//JWT
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'		//JWT
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'	//JWT
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//KOMORAN
	implementation 'com.github.shin285:KOMORAN:3.4.0-beta'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
}

// QueryDSL 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

clean {
	delete file(querydslDir)
}