# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: ðŸš€ Deploy App

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-20.04
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install dependencies for decryption
      run: |
        sudo apt-get install -y ruby-full
        gem install bundler
        gem install nokogiri --platform=ruby
        sudo apt-get install -y openssl

    - name: Create application.properties files from secrets
      run: |
        echo "$APPLICATION_PROPERTIES_MAIN" > ./src/main/resources/application.properties
        echo "$APPLICATION_OAUTH_PROPERTIES_MAIN" > ./src/main/resources/application-oauth.properties
        echo "$APPLICATION_PROPERTIES_KOMORAN" > ./src/main/resources/application-komoran.properties
        echo "$APPLICATION_PROPERTIES_TEST" > ./src/test/resources/application.properties
        echo "$APPLICATION_PROPERTIES_TEST_KOMORAN" > ./src/test/resources/application-komoran.properties
      env:
        APPLICATION_PROPERTIES_MAIN: ${{ secrets.APPLICATION_PROPERTIES_MAIN }}
        APPLICATION_OAUTH_PROPERTIES_MAIN: ${{ secrets.APPLICATION_OAUTH_PROPERTIES_MAIN }}
        APPLICATION_PROPERTIES_KOMORAN: ${{ secrets.APPLICATION_PROPERTIES_KOMORAN }}
        APPLICATION_PROPERTIES_TEST: ${{ secrets.APPLICATION_PROPERTIES_TEST }}
        APPLICATION_PROPERTIES_TEST_KOMORAN: ${{ secrets.APPLICATION_PROPERTIES_TEST_KOMORAN }}
        
    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle
      run: ./gradlew clean build --info

    - name: Zip artifact
      run: |
        zip -r snowroad-webservice *
        mkdir -p deploy
        mv snowroad-webservice.zip deploy/snowroad-webservice.zip

    - name: Upload to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl private
      env:
        AWS_S3_BUCKET: snowroad-be-build
        AWS_REGION: ap-northeast-2
        SOURCE_DIR: deploy
        DEST_DIR: /

    - name: Deploy with CodeDeploy
      uses: webfactory/create-aws-codedeploy-deployment@v1.4.0
      with:
        application-name: noongil-webservice
        deployment-group: noongil-webservice-group
        deployment-description: GitHub Actions deployment
        bundle-location: snowroad-webservice.zip
        bucket: snowroad-be-build
        region: ap-northeast-2      

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
