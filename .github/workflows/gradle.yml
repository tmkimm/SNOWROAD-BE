# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: ðŸš€ Deploy App

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ap-northeast-2

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install dependencies for decryption
      run: |
        sudo apt-get update
        sudo apt-get install -y ruby-full openssl
        sudo gem install bundler
        sudo gem install nokogiri --platform=ruby


    - name: Create application.properties files from secrets
      run: |
        echo "$APPLICATION_PROPERTIES_MAIN" > ./src/main/resources/application.properties
        echo "$APPLICATION_OAUTH_PROPERTIES_MAIN" > ./src/main/resources/application-oauth.properties
        echo "$APPLICATION_PROPERTIES_KOMORAN" > ./src/main/resources/application-komoran.properties
        echo "$APPLICATION_PROPERTIES_TEST" > ./src/test/resources/application.properties
        echo "$APPLICATION_PROPERTIES_TEST_KOMORAN" > ./src/test/resources/application-komoran.properties
      env:
        APPLICATION_PROPERTIES_MAIN: ${{ secrets.APPLICATION_PROPERTIES_MAIN }}
        APPLICATION_OAUTH_PROPERTIES_MAIN: ${{ secrets.APPLICATION_OAUTH_PROPERTIES_MAIN }}
        APPLICATION_PROPERTIES_KOMORAN: ${{ secrets.APPLICATION_PROPERTIES_KOMORAN }}
        APPLICATION_PROPERTIES_TEST: ${{ secrets.APPLICATION_PROPERTIES_TEST }}
        APPLICATION_PROPERTIES_TEST_KOMORAN: ${{ secrets.APPLICATION_PROPERTIES_TEST_KOMORAN }}
        
    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle
      run: ./gradlew clean build --info

    - name: Prepare deployment package
      run: |
        mkdir -p before-deploy
        cp scripts/*.sh before-deploy/
        cp appspec.yml before-deploy/
        cp build/libs/*.jar before-deploy/
        cd before-deploy && zip -r before-deploy *
        cd ../ && mkdir -p deploy
        mv before-deploy/before-deploy.zip deploy/snowroad-webservice.zip

    #- name: Upload to S3
    #  uses: jakejarvis/s3-sync-action@master
    #  with:
    #    args: --acl private
    #  env:
    #    AWS_S3_BUCKET: snowroad-be-build
    #    AWS_REGION: ap-northeast-2
    #    SOURCE_DIR: deploy
    #    DEST_DIR: /
    # gpt ë²„ì „
    - name: Upload to S3
      run: |
        aws s3 cp deploy/snowroad-webservice.zip s3://snowroad-be-build/snowroad-webservice.zip

    #- name: Deploy with AWS CodeDeploy
    #  uses: aws-actions/aws-codedeploy@v0.4.1
    #  with:
    #    application-name: noongil-webservice
    #    deployment-group: noongil-webservice-group
    #    deployment-description: GitHub Actions deployment
    #    s3-location: snowroad-be-build/snowroad-webservice.zip
    #    wait: true
    # gpt ë²„ì „
    - name: Deploy with AWS CLI & CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name noongil-webservice \
          --deployment-group-name noongil-webservice-group \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --s3-location bucket=snowroad-be-build,key=snowroad-webservice.zip,bundleType=zip \
          --description "GitHub Actions deployment"

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
